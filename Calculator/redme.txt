// For module - I like it (rather write whole path in .proto file)
protoc --go_out=. --go_opt=module=Calculator --go-grpc_out=. --go-grpc_opt=module=Calculator proto/*.proto

// For paths, relative path... I didn't find easy till now
protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/*.proto

Define Server:
    create a struct with server interface

Implement Server:
    1. Listen on defined port
    2. Create new instance of grpc Server
    3. Register server on it (with server obj)
    3. Serve by server instance with listing object (s.Serve(lis))

